#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include <sys/socket.h>

#define PORT 8080

void handleHttpRequest(int socket) {
    // Leggi la richiesta HTTP dal frontend
    char request[1024];
    recv(socket, request, sizeof(request), 0);
    
    printf("Richiesta ricevuta dal frontend: %s\n", request);

    // Stampa il messaggio
    printf("Messaggio ricevuto dal frontend: Hello from frontend\n");

    // Invia una risposta al frontend
    const char *response = "HTTP/1.1 200 OK\nContent-Type: text/html\n\nHello from server";
    send(socket, response, strlen(response), 0);
}

int main() {
    printf("Avvio avvenuto con successo\n");

    int serverSocket, newSocket;
    struct sockaddr_in serverAddr, clientAddr;
    socklen_t clientAddrLen = sizeof(clientAddr);

    if ((serverSocket = socket(AF_INET, SOCK_STREAM, 0)) == -1) {
        perror("Failed to create socket\n");
        return 1;
    }

    serverAddr.sin_family = AF_INET;
    serverAddr.sin_addr.s_addr = INADDR_ANY;
    serverAddr.sin_port = htons(PORT);

    if (bind(serverSocket, (struct sockaddr *)&serverAddr, sizeof(serverAddr)) == -1) {
        perror("Bind failed\n");
        close(serverSocket);
        return 1;
    }

    if (listen(serverSocket, 3) < 0) {
        perror("Listen failed\n");
        close(serverSocket);
        return 1;
    }

    while (1) {
        if ((newSocket = accept(serverSocket, (struct sockaddr *)&clientAddr, &clientAddrLen)) == -1) {
            perror("Accept failed\n");
            close(serverSocket);
            return 1;
        }

        printf("Connessione accettata dal frontend\n");

        handleHttpRequest(newSocket);

        close(newSocket);
    }

    close(serverSocket);
    return 0;
}
